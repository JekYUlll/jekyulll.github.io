<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Frontend on HOREB EVAN JEKYULLL BLOG</title><link>https://jekyulll.github.io/tags/frontend/</link><description>Recent content in Frontend on HOREB EVAN JEKYULLL BLOG</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 18 Mar 2025 06:05:47 +0800</lastBuildDate><atom:link href="https://jekyulll.github.io/tags/frontend/index.xml" rel="self" type="application/rss+xml"/><item><title>【01】Flet 学习笔记 --Flutter原理</title><link>https://jekyulll.github.io/post/frontend-01flet-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0---flutter%E5%8E%9F%E7%90%86/</link><pubDate>Tue, 18 Mar 2025 06:05:47 +0800</pubDate><guid>https://jekyulll.github.io/post/frontend-01flet-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0---flutter%E5%8E%9F%E7%90%86/</guid><description>&lt;p>Flutter为何能摆脱浏览器依赖？&lt;/p>
&lt;hr>
&lt;h3 id="一flutter的三层架构从操作系统到界面渲染">一、Flutter的三层架构：从操作系统到界面渲染&lt;/h3>
&lt;p>&lt;strong>1. 嵌入层（Embedder）&lt;/strong>&lt;br>
嵌入层是Flutter与操作系统对话的&amp;quot;翻译官&amp;quot;，负责将Flutter引擎安装到目标平台。例如在Android上，它通过Java/C++与Activity生命周期交互；在iOS上则通过Objective-C桥接UIKit事件。这一层的关键任务是创建绘图表面（Surface）并管理线程模型（如UI线程、GPU线程），为上层渲染提供稳定的运行环境。&lt;/p></description></item></channel></rss>