<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mysql on HOREB EVAN JEKYULLL BLOG</title><link>https://jekyulll.github.io/tags/mysql/</link><description>Recent content in Mysql on HOREB EVAN JEKYULLL BLOG</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 21 Nov 2024 18:05:47 +0800</lastBuildDate><atom:link href="https://jekyulll.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>表格展示 MySQL 基础数据类型</title><link>https://jekyulll.github.io/post/database-%E8%A1%A8%E6%A0%BC%E5%B1%95%E7%A4%BA-mysql-%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Thu, 21 Nov 2024 18:05:47 +0800</pubDate><guid>https://jekyulll.github.io/post/database-%E8%A1%A8%E6%A0%BC%E5%B1%95%E7%A4%BA-mysql-%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>数据类型&lt;/th>
 &lt;th>描述&lt;/th>
 &lt;th>存储范围/格式&lt;/th>
 &lt;th>示例&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>INT（整数型）&lt;/td>
 &lt;td>存储整数，有不同的字节大小来适应不同范围的整数&lt;/td>
 &lt;td>有TINYINT（1字节，范围 - 128到127）、SMALLINT（2字节，范围 - 32768到32767）、MEDIUMINT（3字节）、INT（4字节，范围 - 2147483648到2147483647）、BIGINT（8字节）&lt;/td>
 &lt;td>&lt;code>age INT;&lt;/code>，可以存储像25这样的年龄值&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>FLOAT和DOUBLE（浮点型）&lt;/td>
 &lt;td>用于存储带有小数部分的数值，FLOAT精度较低，DOUBLE精度较高&lt;/td>
 &lt;td>FLOAT单精度浮点数，大约7位有效数字；DOUBLE双精度浮点数，大约15位有效数字&lt;/td>
 &lt;td>&lt;code>price FLOAT;&lt;/code>可以存储像9.99这样的价格值，对于更高精度的科学计算可能使用&lt;code>measurement DOUBLE;&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>DECIMAL&lt;/td>
 &lt;td>精确的小数值存储，常用于金融等对精度要求极高的领域&lt;/td>
 &lt;td>格式为DECIMAL(M,D)，M是数字总位数，D是小数点后的位数&lt;/td>
 &lt;td>&lt;code>amount DECIMAL(10,2);&lt;/code>可以精确存储像12345.67这样的金额，其中总共可以存储10位数字，小数点后2位&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>CHAR&lt;/td>
 &lt;td>定长字符串，存储固定长度的字符序列&lt;/td>
 &lt;td>定义时指定长度，如CHAR(10)，最多存储10个字符，不足部分用空格填充&lt;/td>
 &lt;td>&lt;code>code CHAR(5);&lt;/code>可以存储像&amp;rsquo;ABCD &amp;lsquo;（注意后面有空格）这样的字符串&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>VARCHAR&lt;/td>
 &lt;td>可变长字符串，根据实际存储的字符长度占用空间&lt;/td>
 &lt;td>定义最大长度，如VARCHAR(255)，实际存储多长就占用多少空间加上1 - 2字节用于记录长度&lt;/td>
 &lt;td>&lt;code>name VARCHAR(50);&lt;/code>可以存储像&amp;rsquo;John Doe&amp;rsquo;这样的名字，长度小于等于50个字符&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>TEXT&lt;/td>
 &lt;td>用于存储大量文本内容&lt;/td>
 &lt;td>有TINYTEXT、TEXT、MEDIUMTEXT和LONGTEXT，存储大小逐渐增大&lt;/td>
 &lt;td>&lt;code>description TEXT;&lt;/code>可以存储一篇短文或者产品描述&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>BLOB&lt;/td>
 &lt;td>存储二进制大型对象，如图像、音频等&lt;/td>
 &lt;td>有TINYBLOB、BLOB、MEDIUMBLOB和LONGBLOB，存储大小逐渐增大&lt;/td>
 &lt;td>&lt;code>image BLOB;&lt;/code>可以存储一张照片的二进制数据&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>DATE&lt;/td>
 &lt;td>存储日期，格式为YYYY - MM - DD&lt;/td>
 &lt;td>从1000 - 01 - 01到9999 - 12 - 31&lt;/td>
 &lt;td>&lt;code>birth_date DATE;&lt;/code>可以存储像'2000 - 01 - 01&amp;rsquo;这样的出生日期&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>TIME&lt;/td>
 &lt;td>存储时间，格式为HH:MM:SS&lt;/td>
 &lt;td>-&lt;/td>
 &lt;td>&lt;code>start_time TIME;&lt;/code>可以存储像'09:00:00&amp;rsquo;这样的开始时间&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>DATETIME&lt;/td>
 &lt;td>存储日期和时间，格式为YYYY - MM - DD HH:MM:SS&lt;/td>
 &lt;td>从1000 - 01 - 01 00:00:00到9999 - 12 - 31 23:59:59&lt;/td>
 &lt;td>&lt;code>order_time DATETIME;&lt;/code>可以存储像'2024 - 01 - 01 10:30:00&amp;rsquo;这样的订单时间&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>TIMESTAMP&lt;/td>
 &lt;td>存储日期和时间戳，会受到时区影响&lt;/td>
 &lt;td>从1970 - 01 - 01 00:00:00 UTC到2038 - 01 - 19 03:14:07 UTC&lt;/td>
 &lt;td>&lt;code>update_time TIMESTAMP;&lt;/code>用于记录更新时间，在不同时区设置下可能会有变化&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item></channel></rss>